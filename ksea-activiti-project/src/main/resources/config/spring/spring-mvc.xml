<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
	   http://www.springframework.org/schema/cache  
	   http://www.springframework.org/schema/cache/spring-cache.xsd 
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--
        springMVC.XML 表现层配置文件，只应加装表现层Bean
        开启controller注解支持,把标记了@Controller注解的类转换为bean
     使用了 context:component-scan 标签 上面的 context:annotation-config 就不需要配置了
     因为此处只应该加载表现层组件，如果此处还加载dao层或service层的bean会将之前容器加载的替换掉
     而且此处不会进行AOP织入，所以会造成AOP失效问题（如事务不起作用）

     -->

    <!-- 默认的注解映射的支持 -->
    <context:annotation-config/>
    <mvc:annotation-driven/>

    <!-- 自动扫描的包名 -->
    <context:component-scan base-package="org.ksea.activiti.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 静态资源(js、image等)的访问 -->
    <mvc:default-servlet-handler/>

    <!-- 视图处理器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
        <property name="contentType" value="text/html;charset=utf-8"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    </bean>

    <!-- 上传配置 -->
    <!--
        org.springframework.web.multipart.commons.CommonsMultipartResolver这个是
        spring的默认配置，但是kindEditor的request被拦截导致无法上传图片。
        重写CommonsMultipartResolver中的isMultipart方法解决问题。
        com.hdc.interceptors.DefaultMultipartResolver
    -->
    <bean id="multipartResolver" class="org.ksea.activiti.utils.DefaultMultipartResolver">
        <property name="maxInMemorySize">
            <value>104857600</value><!-- 最大10M -->
        </property>
        <!-- 	<property name="uploadTempDir">
                    <value>UploadFile</value>
                </property> -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

    <!-- 对静态资源文件的访问 -->
    <!-- 所有的页面引用到css/**的资源都从css/*里面进行查找 -->
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>
    <mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>
    <mvc:resources mapping="/plugin/**" location="/plugin/" cache-period="31556926"/>
    <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>

    <!-- 全局异常配置 -->
    <!--  <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
          <property name="exceptionMappings">
              <props>
                  <prop key="java.lang.Exception">error/500</prop>
                  <prop key="java.lang.RuntimeException">error/500</prop>
                  <prop key="java.lang.Throwable">error/500</prop>
                  <prop key="UnauthorizedException">error/noRealm</prop>
              </props>
          </property>
          &lt;!&ndash; 设置日志输出级别，不定义则默认不输出警告等错误日志信息 &ndash;&gt;
          <property name="warnLogCategory" value="WARN"></property>
          &lt;!&ndash; 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 &ndash;&gt;
          <property name="defaultErrorView" value="error/500"></property>
          &lt;!&ndash; 默认HTTP状态码 &ndash;&gt;
          <property name="defaultStatusCode" value="500"></property>
      </bean>-->


    <!--     <mvc:interceptors>
            分页拦截器
            <mvc:interceptor>
                <mvc:mapping path="/**" />
                <bean class="com.zml.oa.interceptor.PaginationInterceptor" />
            </mvc:interceptor>
            设置国际化信息的拦截器
            <mvc:interceptor>
                <mvc:mapping path="/**" />
                <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
                   <property name="paramName" value="language"/>
               </bean>
            </mvc:interceptor>

        </mvc:interceptors> -->


    <!-- 添加 Shiro Spring AOP 权限注解的支持 -->
    <!-- <aop:config proxy-target-class="true"></aop:config>
     <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
         <property name="securityManager" ref="securityManager"/>
     </bean>-->
</beans>